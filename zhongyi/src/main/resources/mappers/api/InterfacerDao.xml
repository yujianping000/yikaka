<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.framework.loippi.dao.InterfacerDao">
	
	<resultMap id="InterfacerResultMap" type="com.framework.loippi.entity.Interfacer">
		<id property="id" column="ID"  />
		<result property="name" column="NAME" />
		<result property="method" column="METHOD" />
		<result property="url" column="URL" />
		<result property="uuid" column="UUID" />
		<result property="description" column="DESCRIPTION" />
		<result property="createDate" column="CREATE_DATE" />
		<result property="updateDate" column="UPDATE_DATE" />
		<result property="categoryId" column="CATEGORY_ID" />
		<result property="codes" column="CODES" />
	</resultMap>
	
	<!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
	<sql id="base_column">
		 ID ,NAME ,METHOD ,URL ,UUID ,DESCRIPTION ,CREATE_DATE ,UPDATE_DATE ,CATEGORY_ID ,CODES
	</sql>
	
	<sql id="base_value_column">
		 #{id},#{name},#{method},#{url},#{uuid},#{description},#{createDate},#{updateDate},#{categoryId},#{codes}
	</sql>
	
	<!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
	<sql id="where_column">
		<if test="id != null and id != ''">
			AND ID = #{id,jdbcType=BIGINT},
		</if>
		<if test="name != null and name != ''">
			AND NAME = #{name,jdbcType=VARCHAR}
		</if>
		<if test="uuid != null and uuid != ''">
			AND UUID = #{uuid,jdbcType=VARCHAR}
		</if>
		<if test="categoryId != null and categoryId != ''">
			AND CATEGORY_ID = #{categoryId,jdbcType=BIGINT}
		</if>
	</sql>
	
	<!-- 设置语句 -->
	<sql id="set_column">
		<if test="id != null and id != ''">
			ID = #{id,jdbcType=BIGINT},
		</if>
		<if test="name != null and name != ''">
			NAME = #{name,jdbcType=VARCHAR},
		</if>
		<if test="method != null and method != ''">
			METHOD = #{method,jdbcType=VARCHAR},
		</if>
		<if test="url != null and url != ''">
			URL = #{url,jdbcType=VARCHAR},
		</if>
		<if test="uuid != null and uuid != ''">
			UUID = #{uuid,jdbcType=VARCHAR},
		</if>
		<if test="description != null and description != ''">
			DESCRIPTION = #{description,jdbcType=VARCHAR},
		</if>
		<if test="createDate != null and createDate != ''">
			CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
		</if>
		<if test="updateDate != null and updateDate != ''">
			UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
		</if>
		<if test="categoryId != null and categoryId != ''">
			CATEGORY_ID = #{categoryId,jdbcType=BIGINT},
		</if>
		<if test="codes != null and codes != ''">
			CODES = #{codes,jdbcType=VARCHAR},
		</if>
	</sql>

	<!-- 根据ID查询 -->
	<select id="find" resultMap="InterfacerResultMap">
		SELECT	<include refid="base_column" />
		FROM	T_API_INTERFACER
		WHERE	ID=#{id,jdbcType=BIGINT}
	</select>
	
	<!-- 查询所有 -->
	<select id="findAll" resultMap="InterfacerResultMap">
		SELECT	<include refid="base_column" />
		FROM	T_API_INTERFACER
	</select>
	
	<!-- 统计记录数 -->
	<select id="count" resultType="long">
		SELECT COUNT(*) FROM T_API_INTERFACER
		<where> 
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 插入 -->
	<insert id="insert" parameterType="com.framework.loippi.entity.Interfacer">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">  
	          SELECT LAST_INSERT_ID() AS ID    
	    </selectKey>  
		INSERT T_API_INTERFACER 
				(<include refid="base_column" /> )
		VALUES	(<include refid="base_value_column" />)
	</insert>
	
	<!-- 修改 -->
	<update id="update" parameterType="com.framework.loippi.entity.Interfacer">
		UPDATE	T_API_INTERFACER
		<set>
			<include refid="set_column" />
		</set>
		WHERE	ID = #{id,jdbcType=BIGINT}
	</update>
	
	<!-- 删除单条记录 -->
	<delete id="delete">
		DELETE	FROM T_API_INTERFACER
		WHERE	ID = #{id,jdbcType=BIGINT}
	</delete>
	
	<!-- 删除多条记录-->
	<delete id="deleteAll">
		DELETE	FROM T_API_INTERFACER
		WHERE	ID	IN
    	<foreach item="InterfacerId" index="index" collection="ids" open="(" separator="," close=")">
	  		#{InterfacerId} 
		</foreach>
	</delete>
	
	<!-- 根据参数查询列表-->
	<select id="findByParams" resultMap="InterfacerResultMap">
		SELECT	<include refid="base_column" />
		FROM 	T_API_INTERFACER
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 分页查询-->
	<select id="findByPage" resultMap="InterfacerResultMap">
		SELECT
		<include refid="base_column" />
		FROM T_API_INTERFACER
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>
	
</mapper> 