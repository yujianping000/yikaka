<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.framework.loippi.dao.AreaDao">
	
	<resultMap id="AreaResultMap" type="com.framework.loippi.entity.Area">
		<id property="id" column="ID" />
		<result property="createDate" column="CREATE_DATE" />
		<result property="name" column="NAME" />
		<result property="fullName" column="FULL_NAME" />
		<result property="treePath" column="TREE_PATH" />
		<result property="parentId" column="PARENT_ID" />
		
		<result property="type" column="type" />
		<result property="letter" column="letter" />
		
	</resultMap>
	
	<!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
	<sql id="base_column">
		 ID ,CREATE_DATE ,NAME ,FULL_NAME ,TREE_PATH ,PARENT_ID,type ,letter
	</sql>
	
	<sql id="base_value_column">
		#{id,jdbcType=BIGINT} ,#{createDate} ,#{name} ,#{fullName},#{treePath} ,#{parentId},#{type} ,#{letter}
	</sql>
	
	<!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
	<sql id="where_column">
		<if test="id != null and id != ''">
			AND ID = #{id,jdbcType=BIGINT}
		</if>
		<if test="name != null and name != ''">
			AND NAME  like CONCAT('%',#{name},'%')
		</if>
		<if test="fullName != null and fullName != ''">
			AND FULL_NAME like CONCAT('%',#{fullName},'%')
		</if>
		
		<if test="treePath != null and treePath != ''">
			AND TREE_PATH = #{treePath,jdbcType=VARCHAR}
		</if>
		
		<if test="parentId != null and parentId != ''">
			AND PARENT_ID = #{parentId,jdbcType=BIGINT}
		</if>
		
		<if test="letter != null and letter != ''">
			AND letter = #{letter,jdbcType=VARCHAR}		
			
			</if>
			
			
		<if test="type != null and type != ''">
			AND type = #{type,jdbcType=INTEGER}
		</if>
		
	</sql>
	
	<sql id="set_column">
		<if test="id != null and id != ''">
			ID = #{id,jdbcType=BIGINT},
		</if>
		<if test="name != null and name != ''">
			NAME = #{name,jdbcType=VARCHAR} ,
		</if>
		<if test="fullName != null and fullName != ''">
			FULL_NAME = #{fullName,jdbcType=VARCHAR},
		</if>
		<if test="treePath != null and treePath != ''">
			TREE_PATH = #{treePath,jdbcType=INTEGER},
		</if>
		<if test="parentId != null and parentId != ''">
			PARENT_ID = #{parentId,jdbcType=BIGINT},
		</if>
		
		
			<if test="letter != null and letter != ''">
			letter = #{letter,jdbcType=VARCHAR},
		</if>
		<if test="type != null and type != ''">
			type = #{type,jdbcType=INTEGER},
		</if>
		
	</sql>

	
	<select id="find" resultMap="AreaResultMap">
		SELECT	<include refid="base_column" />
		FROM	T_SYSTEM_AREA
		WHERE	ID=#{id,jdbcType=BIGINT}
	</select>
	
	<select id="findAll" resultMap="AreaResultMap">
		SELECT	<include refid="base_column" />
		FROM	T_SYSTEM_AREA
	</select>
	
	
	<select id="findRoots" resultMap="AreaResultMap">
		SELECT	<include refid="base_column" />
		FROM	T_SYSTEM_AREA WHERE PARENT_ID IS NULL
	</select>
	
	<select id="findChildrens" resultMap="AreaResultMap">
		SELECT	<include refid="base_column" />
		FROM	T_SYSTEM_AREA
		WHERE	PARENT_ID=#{id,jdbcType=BIGINT} 
	</select>
	
	
	<insert id="insert" parameterType="com.framework.loippi.entity.Area">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">  
	          SELECT LAST_INSERT_ID() AS ID    
	    </selectKey>  
		INSERT T_SYSTEM_AREA 
				(<include refid="base_column" /> )
		VALUES	(<include refid="base_value_column" />)
	</insert>
	
	<update id="update" parameterType="com.framework.loippi.entity.Area">
		UPDATE	T_SYSTEM_AREA
		<set>
			<include refid="set_column" />
		</set>
		WHERE	ID = #{id,jdbcType=BIGINT}
	</update>
	
	<delete id="delete">
		DELETE	FROM T_SYSTEM_AREA
		WHERE	ID = #{id,jdbcType=BIGINT}
	</delete>
	
	<delete id="deleteAll">
		DELETE	FROM T_SYSTEM_AREA
		WHERE	ID	IN
    	<foreach item="AdId" index="index" collection="ids" open="(" separator="," close=")">
	  		#{AdId} 
		</foreach>
	</delete>
	
	<select id="findByParams" resultMap="AreaResultMap">
		SELECT	<include refid="base_column" />
		FROM 	T_SYSTEM_AREA
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>
	
	<select id="findByPage" resultMap="AreaResultMap">
		SELECT
		<include refid="base_column" />
		FROM T_SYSTEM_AREA
		<where> 1=1
			<include refid="where_column" />
		</where>
		ORDER BY SORTS
	</select>
	
</mapper> 