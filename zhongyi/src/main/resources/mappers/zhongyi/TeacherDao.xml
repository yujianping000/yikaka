<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.framework.loippi.dao.TeacherDao">
	
	<resultMap id="TeacherResultMap" type="com.framework.loippi.entity.Teacher">
		<id property="id" column="id"  />
		<result property="account" column="account" />
		<result property="password" column="password" />
		<result property="socialCode" column="social_code" />
		<result property="type" column="type" />
		<result property="nickname" column="nickname" />
		<result property="avatar" column="avatar" />
		<result property="birthday" column="birthday" />
		<result property="mark" column="mark" />
		<result property="description" column="description" />
		<result property="favStar" column="fav_star" />
		<result property="createDate" column="create_date" />
		<result property="sex" column="sex" />
		<result property="status" column="status" />
		<result property="age" column="age" />
		<result property="teacherType" column="teacher_type" />
		
		<result property="orgName" column="org_name" />
		<result property="joinTime" column="join_time" />
	</resultMap>
	
	<!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
	<sql id="base_column">
		 id ,account ,password ,social_code ,type ,nickname ,avatar ,birthday ,mark ,description ,fav_star ,create_date ,sex ,status ,age
		  ,teacher_type,org_name ,join_time
	</sql>
	
	<sql id="base_value_column">
		 #{id},#{account},#{password},#{socialCode},#{type},#{nickname},#{avatar},#{birthday},#{mark},#{description},#{favStar},#{createDate},#{sex},#{status},#{age},#{teacherType},#{orgName},#{joinTime}
	</sql>
	
	<!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
	<sql id="where_column">

		<if test="id != null ">
			AND id = #{id,jdbcType=BIGINT}
		</if>
	

		<if test="account != null ">
			AND account = #{account,jdbcType=VARCHAR}
		</if>
	

		<if test="password != null ">
			AND password = #{password,jdbcType=VARCHAR}
		</if>
	

		<if test="socialCode != null ">
			AND social_code = #{socialCode,jdbcType=VARCHAR}
		</if>
	

		<if test="type != null ">
			AND type = #{type,jdbcType=INTEGER}
		</if>
	

		<if test="nickname != null ">
			AND nickname = #{nickname,jdbcType=VARCHAR}
		</if>
	

		<if test="avatar != null ">
			AND avatar = #{avatar,jdbcType=VARCHAR}
		</if>
	

		<if test="birthday != null ">
			AND birthday = #{birthday,jdbcType=TIMESTAMP}
		</if>
	

		<if test="mark != null ">
			AND mark = #{mark,jdbcType=VARCHAR}
		</if>
	

		<if test="description != null ">
			AND description = #{description,jdbcType=VARCHAR}
		</if>
	

		<if test="favStar != null ">
			AND fav_star = #{favStar,jdbcType=INTEGER}
		</if>
	

		<if test="createDate != null ">
			AND create_date = #{createDate,jdbcType=TIMESTAMP}
		</if>
	

		<if test="sex != null ">
			AND sex = #{sex,jdbcType=VARCHAR}
		</if>
	

		<if test="status != null ">
			AND status = #{status,jdbcType=INTEGER}
		</if>
	

		<if test="age != null ">
			AND age = #{age,jdbcType=INTEGER}
		</if>
		
		<if test="teacherType != null ">
			AND teacher_type = #{teacherType,jdbcType=INTEGER}
		</if>
		
		<if test="orgName != null ">
			AND org_name = #{orgName,jdbcType=VARCHAR}
		</if>
		
		<if test="joinTime != null ">
			AND join_time = #{joinTime,jdbcType=TIMESTAMP}
		</if>
		
		<!-- 页面搜索条件 -->
		<!-- 模糊查询条件 -->
		<if test="filter_account != null">
			AND t_teacher.account like CONCAT('%','${filter_account}','%')
		</if>
		
		<if test="filter_nickname != null">
			AND t_teacher.nickname like CONCAT('%','${filter_nickname}','%')
		</if>
		
		<if test="filter_orgName != null">
			AND t_teacher.org_name like CONCAT('%','${filter_orgName}','%')
		</if>
		
		<if test="filter_teacherType != null ">
			AND t_teacher.teacher_type = ${filter_teacherType}
		</if>
		
		<if test="filter_status != null ">
			AND t_teacher.status = ${filter_status}
		</if> 
	
	</sql>
	
	<!-- 设置语句 -->
	<sql id="set_column">
		<if test="id != null ">
			id = #{id,jdbcType=BIGINT},
		</if>
		<if test="account != null ">
			account = #{account,jdbcType=VARCHAR},
		</if>
		<if test="password != null ">
			password = #{password,jdbcType=VARCHAR},
		</if>
		<if test="socialCode != null ">
			social_code = #{socialCode,jdbcType=VARCHAR},
		</if>
		<if test="type != null ">
			type = #{type,jdbcType=INTEGER},
		</if>
		<if test="nickname != null ">
			nickname = #{nickname,jdbcType=VARCHAR},
		</if>
		<if test="avatar != null ">
			avatar = #{avatar,jdbcType=VARCHAR},
		</if>
		<if test="birthday != null ">
			birthday = #{birthday,jdbcType=TIMESTAMP},
		</if>
		<if test="mark != null ">
			mark = #{mark,jdbcType=VARCHAR},
		</if>
		<if test="description != null ">
			description = #{description,jdbcType=VARCHAR},
		</if>
		<if test="favStar != null ">
			fav_star = #{favStar,jdbcType=INTEGER},
		</if>
		<if test="createDate != null ">
			create_date = #{createDate,jdbcType=TIMESTAMP},
		</if>
		<if test="sex != null ">
			sex = #{sex,jdbcType=VARCHAR},
		</if>
		<if test="status != null ">
			status = #{status,jdbcType=INTEGER},
		</if>
		<if test="age != null ">
			age = #{age,jdbcType=INTEGER},
		</if>
		
		<if test="teacherType != null ">
			teacher_type = #{teacherType,jdbcType=INTEGER},
		</if>
		
		<if test="orgName != null ">
			org_name = #{orgName,jdbcType=VARCHAR},
		</if>
		
		<if test="joinTime != null ">
			join_time = #{joinTime,jdbcType=TIMESTAMP},
		</if>
	</sql>

	<!-- 根据ID查询 -->
	<select id="find" resultMap="TeacherResultMap">
		SELECT	<include refid="base_column" />
		FROM	T_TEACHER
		WHERE	ID=#{id,jdbcType=BIGINT}
	</select>
	
	<!-- 查询所有 -->
	<select id="findAll" resultMap="TeacherResultMap">
		SELECT	<include refid="base_column" />
		FROM	T_TEACHER
	</select>
	
	<!-- 统计记录数 -->
	<select id="count" resultType="long">
		SELECT COUNT(*) FROM T_TEACHER
		<where> 
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 插入 -->
	<insert id="insert" parameterType="com.framework.loippi.entity.Teacher">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">  
	          SELECT LAST_INSERT_ID() AS ID    
	    </selectKey>  
		INSERT T_TEACHER 
				(<include refid="base_column" /> )
		VALUES	(<include refid="base_value_column" />)
	</insert>
	
	<!-- 修改 -->
	<update id="update" parameterType="com.framework.loippi.entity.Teacher">
		UPDATE	T_TEACHER
		<set>
			<include refid="set_column" />
		</set>
		WHERE	ID = #{id,jdbcType=BIGINT}
	</update>
	
	<!-- 删除单条记录 -->
	<delete id="delete">
		DELETE	FROM T_TEACHER
		WHERE	ID = #{id,jdbcType=BIGINT}
	</delete>
	
	<!-- 删除多条记录-->
	<delete id="deleteAll">
		DELETE	FROM T_TEACHER
		WHERE	ID	IN
    	<foreach item="TeacherId" index="index" collection="ids" open="(" separator="," close=")">
	  		#{TeacherId} 
		</foreach>
	</delete>
	
	<!-- 根据参数查询列表-->
	<select id="findByParams" resultMap="TeacherResultMap">
		SELECT	<include refid="base_column" />
		FROM 	T_TEACHER
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 分页查询-->
	<select id="findByPage" resultMap="TeacherResultMap">
		SELECT
		<include refid="base_column" />
		FROM T_TEACHER
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>


       <!-- 分页查询-->
       <select id="findListByPage" resultMap="TeacherResultMap">
		SELECT
		<include refid="base_column" />
		FROM T_TEACHER
		<where> 1=1
			<include refid="where_column" />
		</where>
					
	     <if test="order != null and order != ''">
		order by  ${order}
	     </if>
	     
		<if test="pageNumber != null  and pageSize !=null ">
			limit  #{pageNumber,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	     </if>
			
		
	</select>
	
	
	<!--根据机构id查询教师信息  -->
		<select id="findTeacherListByOrgId" resultMap="TeacherResultMap">
		
			SELECT
				*
			FROM
				t_teacher
			WHERE
				t_teacher.id IN (
					SELECT
						t_org_user.uid
					FROM
						t_org_user
					WHERE
						t_org_user.org_id = ${orgId}
						AND t_org_user.type = 2
				) 
			<include refid="where_column" />
		</select>
	
</mapper> 