<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.framework.loippi.dao.TWagesDao">
	
	<resultMap id="TWagesResultMap" type="com.framework.loippi.entity.TWages">
		<id property="id" column="id"  />
		<result property="month" column="month" />
		<result property="number" column="number" />
		<result property="createDate" column="create_date" />
		<result property="uid" column="uid" />
	</resultMap>
	
	<!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
	<sql id="base_column">
		 id ,month ,number ,create_date ,uid 
	</sql>
	
	<sql id="base_value_column">
		 #{id},#{month},#{number},#{createDate},#{uid}
	</sql>
	
	<!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
	<sql id="where_column">

		<if test="id != null ">
			AND id = #{id,jdbcType=BIGINT}
		</if>
	

		<if test="month != null ">
			AND month = #{month,jdbcType=VARCHAR}
		</if>
	

		<if test="number != null ">
			AND number = #{number,jdbcType=DOUBLE}
		</if>
	

		<if test="createDate != null ">
			AND create_date = #{createDate,jdbcType=BIGINT}
		</if>
	

		<if test="uid != null ">
			AND uid = #{uid,jdbcType=BIGINT}
		</if>
		
		<if test="orgId != null ">
			AND org_id = #{orgId,jdbcType=BIGINT}
		</if>
	
	</sql>
	
	<!-- 设置语句 -->
	<sql id="set_column">
		<if test="id != null ">
			id = #{id,jdbcType=BIGINT},
		</if>
		<if test="month != null ">
			month = #{month,jdbcType=VARCHAR},
		</if>
		<if test="number != null ">
			number = #{number,jdbcType=DOUBLE},
		</if>
		<if test="createDate != null ">
			create_date = #{createDate,jdbcType=BIGINT},
		</if>
		<if test="uid != null ">
			uid = #{uid,jdbcType=BIGINT},
		</if>
	</sql>

	<!-- 根据ID查询 -->
	<select id="find" resultMap="TWagesResultMap">
		SELECT	<include refid="base_column" />
		FROM	T_WAGES
		WHERE	ID=#{id,jdbcType=BIGINT}
	</select>
	
	<!-- 查询所有 -->
	<select id="findAll" resultMap="TWagesResultMap">
		SELECT	<include refid="base_column" />
		FROM	T_WAGES
	</select>
	
	<!-- 统计记录数 -->
	<select id="count" resultType="long">
		SELECT COUNT(*) FROM T_WAGES
		<where> 
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 插入 -->
	<insert id="insert" parameterType="com.framework.loippi.entity.TWages">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">  
	          SELECT LAST_INSERT_ID() AS ID    
	    </selectKey>  
		INSERT T_WAGES 
				(<include refid="base_column" /> )
		VALUES	(<include refid="base_value_column" />)
	</insert>
	
	<!-- 修改 -->
	<update id="update" parameterType="com.framework.loippi.entity.TWages">
		UPDATE	T_WAGES
		<set>
			<include refid="set_column" />
		</set>
		WHERE	ID = #{id,jdbcType=BIGINT}
	</update>
	
	<!-- 删除单条记录 -->
	<delete id="delete">
		DELETE	FROM T_WAGES
		WHERE	ID = #{id,jdbcType=BIGINT}
	</delete>
	
	<!-- 删除多条记录-->
	<delete id="deleteAll">
		DELETE	FROM T_WAGES
		WHERE	ID	IN
    	<foreach item="TWagesId" index="index" collection="ids" open="(" separator="," close=")">
	  		#{TWagesId} 
		</foreach>
	</delete>
	
	<!-- 根据参数查询列表-->
	<select id="findByParams" resultMap="TWagesResultMap">
		SELECT	<include refid="base_column" />
		FROM 	T_WAGES
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 分页查询-->
	<select id="findByPage" resultMap="TWagesResultMap">
		SELECT
		<include refid="base_column" />
		FROM T_WAGES
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>


       <!-- 分页查询-->
       <select id="findListByPage" resultMap="TWagesResultMap">
		SELECT
		<include refid="base_column" />
		FROM T_WAGES
		<where> 1=1
			<include refid="where_column" />
		</where>
					
	     <if test="order != null and order != ''">
		order by  ${order}
	     </if>
	     
		<if test="pageNumber != null  and pageSize !=null ">
			limit  #{pageNumber,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	     </if>
			
		
	</select>
	
</mapper> 