<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd"
	default-lazy-init="true">

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/admin/login.jhtml" />
		<property name="successUrl" value="/admin/common/main.jhtml" />
		<property name="unauthorizedUrl" value="/admin/login.jhtml" />
		<property name="filterChainDefinitions">
			<value>

				/admin/common/unauthorized.jhtml =anon
				/admin/common/captcha.jhtml = anon
				/admin/common/area.jhtml = anon
				/admin/common/index.jhtml = anon
				/admin/article/common/aboutus.jhtml = anon
				/admin/article/common/serviceProtocol.jhtml = anon
				/admin/article/common/payProtocol.jhtml = anon
				/admin/article/common/inductionProtocol.jhtml = anon
				/admin/article/common/levelProtocol.jhtml = anon
				/admin/api/** = anon
				/resources/** = anon
				/api/** = anon
				/admin/** = authc
			</value>
		</property>
		<property name="filters">
			<map>
				<entry key="authc" value-ref="authenticationFilter" />
			</map>
		</property>
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="authenticationRealm" />
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>

	<bean id="authenticationRealm" class="com.framework.loippi.shiro.realm.AuthenticationRealm">
		<property name="authorizationCacheName" value="authorization" />
	</bean>

	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="ehCacheManager" />
	</bean>

	<bean id="authenticationFilter" class="com.framework.loippi.shiro.filter.AuthenticationFilter" />

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>


	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property ref="securityManager" name="arguments" />
	</bean>


</beans>